public class HTMLReceiptPrinter {
    private final int columns;

    public HTMLReceiptPrinter() {
        this(40);
    }

    public HTMLReceiptPrinter(int columns) {
        this.columns = columns;
    }

    public String printHtmlReceipt(Receipt receipt) {
        StringBuilder result = new StringBuilder();
        result.append(htmlReceiptHead());
        for (ReceiptItem item : receipt.getItems()) {
            String receiptItem = htmlpresentReceiptItem(item);
            result.append(receiptItem);
        }
        for (Discount discount : receipt.getDiscounts()) {
            String discountPresentation = htmlpresentDiscount(discount);
            result.append(discountPresentation);
        }

        result.append(htmlpresentTotal(receipt));
        result.append(htmlReceiptEnding());

        return result.toString();
    }

    private String htmlReceiptEnding() {
        return"</table>";
    }

    private String htmlReceiptHead() {
        return"<table>\n";
    }

    private String htmlpresentReceiptItem(ReceiptItem item) {
        String totalPricePresentation = presentPrice(item.getTotalPrice());
        String name = item.getProduct().getName();

        String line = htmlformatLineWithWhitespace(name, totalPricePresentation);

        if (item.getQuantity() != 1) {
            line += "<tr><td colspan=2>" + presentPrice(item.getPrice()) + " * " + presentQuantity(item) + "</td></tr>\n";
        }
        return line;
    }

    private String htmlpresentTotal(Receipt receipt) {
        String name = "<b>Total: ";
        String value = presentPrice(receipt.getTotalPrice());
        return htmlformatLineWithWhitespace(name, value) + "<tr><td colspan=2>&nbsp;</td></tr>\n";
    }

    private String htmlformatLineWithWhitespace(String name, String value) {
        StringBuilder line = new StringBuilder();

        line.append("<tr><td>");
        line.append(name);
        line.append("</td><td>");
        line.append(value);
        line.append("</td></tr>\n");
        return line.toString();
    }

    private String htmlpresentDiscount(Discount discount) {
        String name = discount.getDescription() + "(" + discount.getProduct().getName() + ")";
        String value = "-" + presentPrice(discount.getDiscountAmount());

        return htmlformatLineWithWhitespace(name, value);
    }

    private static String presentPrice(double price) {
        return String.format(Locale.UK, "%.2f", price);
    }

    private static String presentQuantity(ReceiptItem item) {
        return ProductUnit.Each.equals(item.getProduct().getUnit())
                ? String.format("%x", (int)item.getQuantity())
                : String.format(Locale.UK, "%.3f", item.getQuantity());
    }
}